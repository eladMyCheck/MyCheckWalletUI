//
//  DineInWebPresenter.swift
//  Pods
//
//  Created by elad schiller on 8/7/17.
//  Copyright (c) 2017 __MyCompanyName__. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MyCheckCore
protocol AddMasterPassPresentationLogic
{
  func getMasterpassToken(response: AddMasterPass.GetMasterpassToken.Response)
  
  func addedMasterpass(response: AddMasterPass.AddMasterpass.Response)
  
  }

class AddMasterPassPresenter: AddMasterPassPresentationLogic
{
    
    func getMasterpassToken(response: AddMasterPass.GetMasterpassToken.Response) {
       
        let innerJSON : [String: Any] = ["merchantCheckoutID": response.payload.merchantCheckoutID,
                                         "token": response.payload.token]
        let JS = successCall(callback: response.callback, body: innerJSON)
        
        viewController?.runJSOnWebview(viewModel: AddMasterPass.ViewModel(JSToBeInjected: JS))
    }
    
    func addedMasterpass(response: AddMasterPass.AddMasterpass.Response) {
        let viewModel = AddMasterPass.AddMasterpass.ViewModel(complitionStatus:response.complitionStatus)
        viewController?.complete(viewModel: viewModel)
    
    }

   

 

  weak var viewController: AddMasterPassDisplayLogic?

  
  
  func presentFailError(response: AddMasterPass.FailResponse) {
    let JS = failCall(callback: response.callback, error: response.error)
    viewController?.runJSOnWebview(viewModel: AddMasterPass.ViewModel(JSToBeInjected: JS))
  }

   
}

fileprivate extension AddMasterPassPresenter{
  func successCall(callback: String , body: [String: Any]?) -> String{
    
    var returnDictionary: [String: Any] = ["errorCode": 0]
    if let body = body{
    returnDictionary = body
    }else{
        let emptyDic :[String:Any] = [:]
        returnDictionary = emptyDic

    }
    let stringifiedJSON = returnDictionary.stringify() ??
      failCall(callback: callback, error: ErrorCodes.SDKInternalError.getError())
    return "\(callback)('\(stringifiedJSON)')"


  }
  func failCall(callback: String , error: NSError) -> String{
    
    let returnDictionary: [String: Any] = ["errorCode": error.code,
                                      "errorMessage": error.localizedDescription]
    return "\(callback)(\(returnDictionary.stringify()!))"
  }
}

